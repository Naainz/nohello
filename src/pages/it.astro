---
import Layout from '../layouts/Layout.astro';
---

<html lang="it">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>no ciao</title>
<style>
  @font-face {
    font-family: 'Satoshi';
    font-style: normal;
    font-weight: 400;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-Regular.woff) format('woff');
    font-display: swap;
  }

  @font-face {
    font-family: 'Satoshi';
    font-style: italic;
    font-weight: 400;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-Italic.woff) format('woff');
    font-display: swap;
  }

  @font-face {
    font-family: 'Satoshi';
    font-style: normal;
    font-weight: 300;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-Light.woff) format('woff');
    font-display: swap;
  }

  @font-face {
    font-family: 'Satoshi';
    font-style: italic;
    font-weight: 300;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-LightItalic.woff) format('woff');
    font-display: swap;
  }

  @font-face {
    font-family: 'Satoshi';
    font-style: normal;
    font-weight: 500;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-Medium.woff) format('woff');
    font-display: swap;
  }

  @font-face {
    font-family: 'Satoshi';
    font-style: italic;
    font-weight: 500;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-MediumItalic.woff) format('woff');
    font-display: swap;
  }

  @font-face {
    font-family: 'Satoshi';
    font-style: normal;
    font-weight: 700;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-Bold.woff) format('woff');
    font-display: swap;
  }

  @font-face {
    font-family: 'Satoshi';
    font-style: italic;
    font-weight: 700;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-BoldItalic.woff) format('woff');
    font-display: swap;
  }

  @font-face {
    font-family: 'Satoshi';
    font-style: normal;
    font-weight: 900;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-Black.woff) format('woff');
    font-display: swap;
  }

  @font-face {
    font-family: 'Satoshi';
    font-style: italic;
    font-weight: 900;
    src: local('Satoshi'), url(https://fonts.cdnfonts.com/s/85546/Satoshi-BlackItalic.woff) format('woff');
    font-display: swap;
  }

  body {
    margin: 0;
    font-family: Satoshi, sans-serif;
    background-color: #ffffff;
  }

  .container {
    padding: 40px 20px 20px 20px;
  }

  h1 {
    font-size: clamp(3rem, 6vw + 1rem, 5rem);
    margin: 0;
    color: #000000;
    display: inline-block;
  }

  .strikethrough {
    color: black;
    text-decoration: line-through;
    text-decoration-color: red;
    display: inline-block;
  }

  h2 {
    font-size: clamp(1.5rem, 3vw + 0.5rem, 2.5rem);
    margin-top: -5px;
    color: #555555;
    font-weight: lighter;
    opacity: 0.8;
  }

  .cursor {
    font-size: clamp(3rem, 6vw + 1rem, 5rem);
    margin-left: 5px;
    color: #000000;
    display: inline-block;
    animation: blink 0.75s ease-in-out infinite;
  }

  .quote {
    font-weight: 300;
    font-size: clamp(1rem, 2vw + 0.5rem, 1.5rem);
    color: #555555;
    margin-top: 20px;
    font-style: italic;
  }

  .quote em {
    font-style: italic;
  }

  .dont-do-this {
    margin-top: 40px;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
  }

  .dont-do-this span {
    color: #ff0000;
    font-weight: bold;
    margin-right: 10px;
  }

  .dont-do-this-text {
    color: #000000;
    font-weight: bold;
  }

  .content-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    flex-wrap: wrap;
    margin-top: 20px;
  }

  .card {
    background-color: #ffffff;
    border-radius: 8px;
    padding: 8px;
    margin-top: 10px;
    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.2);
    width: 100%;
    max-width: 45%;
    box-sizing: border-box;
  }

  .message {
    display: flex;
    align-items: flex-start;
    margin-bottom: 8px;
    padding-top: 3px;
  }

  .profile-pic-butcher {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-image: url('https://naai.nz/ip/butcher.jpg');
    background-size: cover;
    margin-right: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .profile-pic-hughie {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-image: url('https://naai.nz/ip/hughie.jpg');
    background-size: cover;
    margin-right: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .message-header {
    display: flex;
    align-items: center;
  }

  .message-name {
    font-weight: bold;
    margin-right: 5px;
  }

  .message-time {
    opacity: 0.6;
    font-size: 0.9rem;
  }

  .message-text {
    font-size: 1rem;
    color: #333333;
    margin-top: 4px;
  }

  .explanation {
    font-size: 1rem;
    color: #555555;
    margin-top: 20px;
    max-width: 45%;
    box-sizing: border-box;
  }

  .explanation-bold {
    font-weight: bold;
  }

  .faded-text {
    opacity: 0.75;
  }

  @media (max-width: 770px) {
    .card, .explanation {
      max-width: 100%;
    }
  }

  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }

  .paused {
    animation: none;
  }

  .try-this {
    margin-top: 60px;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
  }

  .try-this span {
    color: #00b894;
    font-weight: bold;
    margin-right: 10px;
  }

  .try-this-text {
    color: #000000;
    font-weight: bold;
  }
</style>

  </head>
  <body>
    <div class="container">
      <h1>no <span class="strikethrough" id="changing-text">ciao</span><span class="cursor" id="cursor">|</span></h1>
      <h2>per favore non dire solo ciao in chat</h2>
      <p class="quote">Immagina di chiamare qualcuno al telefono, dicendo <em>ciao!</em> e poi mettendolo in attesa... ü§¶‚Äç‚ôÄÔ∏è</p>

      <div class="dont-do-this">
        <span>‚ùå</span>
        <span class="dont-do-this-text">Non farlo</span>
      </div>

      <div class="content-wrapper">
        <div class="card">
          <div class="message">
            <div class="profile-pic-butcher"></div>
            <div>
              <div class="message-header">
                <span class="message-name">Billy</span>
                <span class="message-time">10:15</span>
              </div>
              <div class="message-text">ciaooo</div>
            </div>
          </div>
          <div class="message">
            <div class="profile-pic-hughie"></div>
            <div>
              <div class="message-header">
                <span class="message-name">Hughie</span>
                <span class="message-time">10:19</span>
              </div>
              <div class="message-text">..?</div>
            </div>
          </div>
          <div class="message">
            <div class="profile-pic-butcher"></div>
            <div>
              <div class="message-header">
                <span class="message-name">Billy</span>
                <span class="message-time">10:21</span>
              </div>
              <div class="message-text">a che ora √® il raduno di Starlight?</div>
            </div>
          </div>
          <div class="message">
            <div class="profile-pic-hughie"></div>
            <div>
              <div class="message-header">
                <span class="message-name">Hughie</span>
                <span class="message-time">10:22</span>
              </div>
              <div class="message-text">alle 10:30 amico</div>
            </div>
          </div>
        </div>

        <div class="explanation">
          Nota che Billy avrebbe potuto ottenere la sua risposta minuti prima e non avrebbe dovuto far aspettare Hughie. In effetti, Hughie avrebbe potuto iniziare a pensare alla domanda subito!<br><br>
          Le persone che fanno questo di solito cercano di essere educate non entrando subito nella richiesta, come farebbero di persona o al telefono - ed √® fantastico! Ma √® il 2024 e la chat non √® n√© l'una n√© l'altra. Per la maggior parte delle persone, digitare √® molto pi√π lento che parlare. Quindi, nonostante le migliori intenzioni, stai effettivamente facendo aspettare l'altra persona mentre formuli la tua domanda, il che porta a <span class="explanation-bold">perdita di produttivit√†</span> (e un po' fastidioso).<br><br>
          Lo stesso vale per:<br>
          <span class="faded-text">‚ùå "Ciao, ci sei?"<br>
          ‚ùå "ciao Neuman - una domanda veloce."<br>
          ‚ùå "Hai un attimo?"<br>
          ‚ùå "yt?"<br>
          ‚ùå "ping"<br>
          ‚ùå ecc.</span><br><br>
          <span class="explanation-bold">Fai semplicemente la domanda! üò´</span>
        </div>
      </div>

      <div class="try-this">
        <span>‚úÖ</span>
        <span class="try-this-text">Prova questo</span>
      </div>

      <div class="content-wrapper">
        <div class="card">
          <div class="message">
            <div class="profile-pic-butcher"></div>
            <div>
              <div class="message-header">
                <span class="message-name">Butcher</span>
                <span class="message-time">10:15</span>
              </div>
              <div class="message-text">ciao! A che ora era il raduno di Starlight?</div>
            </div>
          </div>
          <div class="message">
            <div class="profile-pic-hughie"></div>
            <div>
              <div class="message-header">
                <span class="message-name">Hughie</span>
                <span class="message-time">10:17</span>
              </div>
              <div class="message-text">ciao caro <3 √® alle 10:30</div>
            </div>
          </div>
          <div class="message">
            <div class="profile-pic-butcher"></div>
            <div>
              <div class="message-header">
                <span class="message-name">Butcher</span>
                <span class="message-time">10:19</span>
              </div>
              <div class="message-text">grazie! ci vediamo allora</div>
            </div>
          </div>
          <div class="message">
            <div class="profile-pic-hughie"></div>
            <div>
              <div class="message-header">
                <span class="message-name">Hughie</span>
                <span class="message-time">10:20</span>
              </div>
              <div class="message-text">üëå nessun problema</div>
            </div>
          </div>
        </div>

        <div class="explanation">
          Se ti sembra un po' brusco dire semplicemente "Ciao" e fare la domanda, puoi sempre premettere il tuo messaggio con quante formalit√† desideri.<br><br>
          Per esempio:<br>
          <span class="faded-text">"ciao amico, come va? Inoltre, sai quando √® prevista quella cosa?"<br>
          "Ciao! Spero che tu stia bene. Sto cercando l'ultima versione della presentazione, quando hai un momento :)"<br>
          "ciao, se non sei impegnato, potresti aggiornare gli NFR?"<br>
          ecc.</span><br><br>
          Potrebbe sembrare banale, ma fare la domanda prima di ottenere quella risposta salutatoria iniziale consente anche la comunicazione asincrona. Se l'altra persona √® assente e te ne vai prima che torni, pu√≤ comunque rispondere alla tua domanda, invece di fissare semplicemente un "Ciao" e chiedersi cosa si √® perso.<br><br>
          Quando √® fatto bene - tutti sono felici! üéâ
        </div>
      </div>
    </div>

    <Layout />
    <script>
      const changingText = document.getElementById('changing-text');
      const cursor = document.getElementById('cursor');
      const greetings = [
        "ciao",
        "salve",
        "buongiorno",
        "buonasera",
        "saluti",
        "ehi",
        "come va",
        "ciao amico"
      ];
      let currentIndex = 0;
      let intervalId;
      let removeInterval;
      let addInterval;
      let isPageHidden = false;

      function removeText(text, callback) {
        let length = text.length;
        removeInterval = setInterval(() => {
          if (length > 0) {
            changingText.textContent = text.slice(0, length - 1);
            length--;
          } else {
            clearInterval(removeInterval);
            callback();
          }
        }, 75);
      }

      function addText(text, callback) {
        let length = 0;
        addInterval = setInterval(() => {
          if (length < text.length) {
            changingText.textContent = text.slice(0, length + 1);
            length++;
          } else {
            clearInterval(addInterval);
            callback();
          }
        }, 75);
      }

      function changeText() {
        cursor.classList.add('paused');
        let currentText = greetings[currentIndex];
        currentIndex = (currentIndex + 1) % greetings.length;
        let newText = greetings[currentIndex];

        removeText(currentText, () => {
          addText(newText, () => {
            cursor.classList.remove('paused');
          });
        });
      }

      function startTextSwap() {
        intervalId = setInterval(changeText, 3750);
      }

      function pauseTextSwap() {
        clearInterval(intervalId);
        clearInterval(removeInterval);
        clearInterval(addInterval);
      }

      function handleVisibilityChange() {
        if (document.hidden) {
          pauseTextSwap();
          isPageHidden = true;
        } else if (isPageHidden) {
          isPageHidden = false;
          startTextSwap();
        }
      }

      document.addEventListener('visibilitychange', handleVisibilityChange);

      setTimeout(() => {
        changeText();
        startTextSwap();
      }, 3000);
    </script>
  </body>
</html>
